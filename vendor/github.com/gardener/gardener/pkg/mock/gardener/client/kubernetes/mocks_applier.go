// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener/pkg/client/kubernetes (interfaces: ApplierInterface)

// Package kubernetes is a generated GoMock package.
package kubernetes

import (
	context "context"
	kubernetes "github.com/gardener/gardener/pkg/client/kubernetes"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockApplierInterface is a mock of ApplierInterface interface
type MockApplierInterface struct {
	ctrl     *gomock.Controller
	recorder *MockApplierInterfaceMockRecorder
}

// MockApplierInterfaceMockRecorder is the mock recorder for MockApplierInterface
type MockApplierInterfaceMockRecorder struct {
	mock *MockApplierInterface
}

// NewMockApplierInterface creates a new mock instance
func NewMockApplierInterface(ctrl *gomock.Controller) *MockApplierInterface {
	mock := &MockApplierInterface{ctrl: ctrl}
	mock.recorder = &MockApplierInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApplierInterface) EXPECT() *MockApplierInterfaceMockRecorder {
	return m.recorder
}

// ApplyManifest mocks base method
func (m *MockApplierInterface) ApplyManifest(arg0 context.Context, arg1 kubernetes.UnstructuredReader, arg2 kubernetes.MergeFuncs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApplyManifest", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ApplyManifest indicates an expected call of ApplyManifest
func (mr *MockApplierInterfaceMockRecorder) ApplyManifest(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyManifest", reflect.TypeOf((*MockApplierInterface)(nil).ApplyManifest), arg0, arg1, arg2)
}

// DeleteManifest mocks base method
func (m *MockApplierInterface) DeleteManifest(arg0 context.Context, arg1 kubernetes.UnstructuredReader) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteManifest", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteManifest indicates an expected call of DeleteManifest
func (mr *MockApplierInterfaceMockRecorder) DeleteManifest(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteManifest", reflect.TypeOf((*MockApplierInterface)(nil).DeleteManifest), arg0, arg1)
}
